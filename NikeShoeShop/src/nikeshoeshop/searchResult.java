/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nikeshoeshop;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.MongoException;
import com.mongodb.QueryBuilder;
import com.mongodb.ServerAddress;
import com.mongodb.WriteConcern;
import java.util.Arrays;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import static nikeshoeshop.NikeShoeShop.*;

/**
 *
 * @author vivek
 */
public class searchResult extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    public searchResult() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        L1 = new javax.swing.JLabel();
        addtocart = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        cart = new javax.swing.JButton();
        AboutUs = new javax.swing.JButton();
        go1main = new javax.swing.JButton();
        scategory = new javax.swing.JComboBox();
        category = new javax.swing.JComboBox();
        popular = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchtable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        L1.setFont(new java.awt.Font("Andalus", 0, 24)); // NOI18N
        L1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L1.setText("SEARCH RESULTS");
        L1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(L1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 210, 50));

        addtocart.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        addtocart.setText("Add to Cart");
        addtocart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtocartActionPerformed(evt);
            }
        });
        getContentPane().add(addtocart, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 620, 150, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("*admin only");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 690, -1, -1));

        add.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        add.setText("Add new shoes to database");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 660, 190, 30));

        cart.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        cart.setText("view cart");
        cart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartActionPerformed(evt);
            }
        });
        getContentPane().add(cart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 70, -1, -1));

        AboutUs.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        AboutUs.setText("About Us");
        AboutUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutUsActionPerformed(evt);
            }
        });
        getContentPane().add(AboutUs, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 70, -1, -1));

        go1main.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        go1main.setText("GO");
        go1main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go1mainActionPerformed(evt);
            }
        });
        getContentPane().add(go1main, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 80, -1, -1));

        scategory.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        scategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Men", "Women", "kids" }));
        getContentPane().add(scategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 70, 30));

        category.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Casual", "Running", "Sports" }));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });
        getContentPane().add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 80, 30));

        popular.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        popular.setText("popular products");
        popular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popularActionPerformed(evt);
            }
        });
        getContentPane().add(popular, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));

        home.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        jLabel2.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        jLabel2.setText("SUB CATEGORY");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, -1, -1));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        jLabel1.setText("CATEGORY");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, -1, -1));

        searchtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "p_id", "category", "sub category", "product name", "size", "MRP", "discount", "price", "quantity left"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(searchtable);
        if (searchtable.getColumnModel().getColumnCount() > 0) {
            searchtable.getColumnModel().getColumn(1).setPreferredWidth(125);
            searchtable.getColumnModel().getColumn(2).setPreferredWidth(125);
            searchtable.getColumnModel().getColumn(3).setPreferredWidth(300);
            searchtable.getColumnModel().getColumn(8).setPreferredWidth(100);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 630, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setOpaque(false);
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 290, 80));

        image.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 200, 300, 300));

        background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nikepics/home/nike-hd-20 -2.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        add1 a=new add1();
        this.dispose();
        a.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed

    private void cartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartActionPerformed
        cart a=new cart();
        a.pop();
        this.dispose();
        a.setVisible(true);
    }//GEN-LAST:event_cartActionPerformed

    private void AboutUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsActionPerformed
        AboutUs a=new AboutUs();
        this.dispose();
        a.setVisible(true);
    }//GEN-LAST:event_AboutUsActionPerformed

    private void go1mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go1mainActionPerformed
              
        try{   
         MongoClient mongoClient = new MongoClient( "localhost" , 27017 );          //to connect to mongodb server
         DB db = mongoClient.getDB( "nikeshop" );                                      //connect to database
		 
         System.out.println("Connected to database successfully");
                 
         DBCollection prod=db.getCollection("Product");                            //using a collection via object prod 
         
         BasicDBObject query = null;
         DBCursor pointer = null;
         int c1=category.getSelectedIndex();
         System.out.println("1st"+c1);
         int c2=scategory.getSelectedIndex();
         System.out.println("2nd"+c2);
          
                                                                                                //all categories              
         if(c1==0&&c2==1)                                                                       
                    {query=new BasicDBObject("sub_category","Men");
                    pointer=prod.find(query);}
         else if(c1==0&&c2==2) 
                    {query=new BasicDBObject("sub_category","Women");
                     pointer=prod.find(query);}
         else if(c1==0&&c2==3) 
                    {query=new BasicDBObject("sub_category","Kids");
                    pointer=prod.find(query);}
         
                                                                                              //all sub categories      
         else if(c1==1&&c2==0) 
                    {query=new BasicDBObject("category","Casual");
                    pointer=prod.find(query);}
         else if(c1==2&&c2==0) 
                    {query=new BasicDBObject("category","Running");
                    pointer=prod.find(query);}
         else if(c1==3&&c2==0) 
                    {query=new BasicDBObject("category","Sports");
                    pointer=prod.find(query);}
         
                                                                                                //all casual   
         else if(c1==1&&c2==1)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Casual");
                        query.put("sub_category","Men");
                        pointer=prod.find(query);
                    }
         else if(c1==1&&c2==2)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Casual");
                        query.put("sub_category","Women");
                        pointer=prod.find(query);
                    }
         else if(c1==1&&c2==3)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Casual");
                        query.put("sub_category","Kids");
                        pointer=prod.find(query);
                    }
         
                                                                                                //all running   
         else if(c1==2&&c2==1)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Running");
                        query.put("sub_category","Men");
                        pointer=prod.find(query);
                    }
         else if(c1==2&&c2==2)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Running");
                        query.put("sub_category","Women");
                        pointer=prod.find(query);
                    }
         else if(c1==2&&c2==3)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Running");
                        query.put("sub_category","Kids");
                        pointer=prod.find(query);
                    }
         
         
         
                                                                                                 //all SPORTS
         else if(c1==3&&c2==1)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Sports");
                        query.put("sub_category","Men");
                        pointer=prod.find(query);
                    }
         else if(c1==3&&c2==2)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Sports");
                        query.put("sub_category","Women");
                        pointer=prod.find(query);
                    }
         else if(c1==3&&c2==3)                                                                      
                    {   query=new BasicDBObject();
                        query.put("category","Sports");
                        query.put("sub_category","Kids");
                        pointer=prod.find(query);
                    }
         
         
         
                                                                                                 //ALL
         else 
                    {pointer=prod.find();}
         
        //BasicDBObject query=new BasicDBObject("sub_category","men");   
        //DBCursor pointer=prod.find(query);
         
         
         System.out.println("before loop");
         DefaultTableModel tm=(DefaultTableModel)searchtable.getModel();
         tm.setRowCount(0);
         
            while(pointer.hasNext())
            {
                
                DBObject pr=pointer.next();
                
                
                double pid=Double.valueOf(String.valueOf(pr.get("p_id")));          //p_id category sub_category "p_name size MRP discount price quantity_left
                //System.out.println("id: "+pid);
                String cat=(String) pr.get("category");
                //System.out.println("cat: "+cat);
                String scat=(String) pr.get("sub_category");
                //System.out.println("scat: "+scat);
                String pname=(String) pr.get("p_name");
                //System.out.println("pname: "+pname);
                double size=Double.valueOf(String.valueOf(pr.get("size")));
                //System.out.println("price: "+size);
                double mrp=Double.valueOf(String.valueOf(pr.get("MRP")));
                //System.out.println("mrp: "+mrp);
                double disc=Double.valueOf(String.valueOf(pr.get("discount")));
                //System.out.println("disc: "+disc);
                double price=Double.valueOf(String.valueOf(pr.get("price")));
                //System.out.println("price: "+price);
                double qtyleft=Double.valueOf(String.valueOf(pr.get("quantity_left")));
                //System.out.println("qtyleft: "+qtyleft);
               
                Object[] data=new Object[]{pid,cat,scat,pname,size,mrp,disc,price,qtyleft};
                tm.addRow(data);
                
               
                
        
                  
            }
         
         
         }
	catch(Exception e)
         {
	     System.err.println( e.getClass().getName() + ": " + e.getMessage() );
	 }
        
        
        
        
    }//GEN-LAST:event_go1mainActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    private void popularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popularActionPerformed
        popular a=new popular();
        this.dispose();
        a.setVisible(true);
    }//GEN-LAST:event_popularActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        home a= new home();
        this.dispose();
        a.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void addtocartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtocartActionPerformed
        Ccount=Ccount+1;
        DefaultTableModel tm=(DefaultTableModel)searchtable.getModel();
        int row=searchtable.getSelectedRow();
        
        Cid[Ccount]=(double)tm.getValueAt(row,0);
        System.out.println("cid "+Cid[Ccount]);
        Ccat.add(Ccount,(String)tm.getValueAt(row,1));
        System.out.println("Ccat "+Ccat.get(Ccount));
        Cscat.add(Ccount,(String)tm.getValueAt(row,2));
        System.out.println("Cscat "+Cscat.get(Ccount));
        Cpname.add(Ccount,(String)tm.getValueAt(row,3));
        System.out.println("Cpname "+Cpname.get(Ccount));
        Csize[Ccount]=(double)tm.getValueAt(row,4);
        System.out.println("csize "+Csize[Ccount]);
        Cmrp[Ccount]=(double)tm.getValueAt(row,5);
        System.out.println("cmrp "+Cmrp[Ccount]);
        Cdiscount[Ccount]=(double)tm.getValueAt(row,6);
        System.out.println("cdisc "+Cdiscount[Ccount]);
        Cprice[Ccount]=(double)tm.getValueAt(row,7);
        System.out.println("cprice "+Cprice[Ccount]);
        Cqtyleft[Ccount]=(double)tm.getValueAt(row,8);
        System.out.println("cqtyleft "+Cqtyleft[Ccount]);
        
        JOptionPane.showMessageDialog(null,"ADDED TO CART");
        //cart c = new cart();
        //c.setVisible(true);
        //c.setvalues(id, cat, scat,pname,size, mrp, discount, price, qtyleft); new funcn name clickpop
        
        
        
    }//GEN-LAST:event_addtocartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchResult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutUs;
    private javax.swing.JLabel L1;
    private javax.swing.JButton add;
    private javax.swing.JButton addtocart;
    private javax.swing.JLabel background;
    private javax.swing.JButton cart;
    private javax.swing.JComboBox category;
    public javax.swing.JButton go1main;
    private javax.swing.JButton home;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton popular;
    private javax.swing.JComboBox scategory;
    private javax.swing.JTable searchtable;
    // End of variables declaration//GEN-END:variables
}
